-- MySQL Script generated by MySQL Workbench
-- Wed Aug 31 17:53:45 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `genero`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `genero` (
  `gen_id` INT NOT NULL AUTO_INCREMENT,
  `gen_nombre` VARCHAR(80) NOT NULL,
  PRIMARY KEY (`gen_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `paciente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `paciente` (
  `pac_identificacion` VARCHAR(20) NOT NULL,
  `pac_nombre` VARCHAR(100) NOT NULL,
  `pac_apellido` VARCHAR(100) NOT NULL,
  `pac_mail` VARCHAR(100) NOT NULL,
  `pac_celular` VARCHAR(50) NOT NULL,
  `pac_genero` INT NOT NULL,
  PRIMARY KEY (`pac_identificacion`),
  CONSTRAINT `paciente_fk_genero`
    FOREIGN KEY (`pac_genero`)
    REFERENCES `genero` (`gen_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `paciente_fk_genero_idx` ON `paciente` (`pac_genero` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `grupo_sanguineo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `grupo_sanguineo` (
  `grupsa_id` INT NOT NULL AUTO_INCREMENT,
  `grupsa_rh` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`grupsa_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `especialidad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `especialidad` (
  `esp_id` INT NOT NULL AUTO_INCREMENT,
  `esp_nombre` VARCHAR(100) NOT NULL,
  `esp_descripcion` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`esp_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `consultorio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `consultorio` (
  `con_numero` INT NOT NULL AUTO_INCREMENT,
  `con_descripcion` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`con_numero`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medico` (
  `med_identificacion` VARCHAR(20) NOT NULL,
  `med_nombre` VARCHAR(100) NOT NULL,
  `med_apellido` VARCHAR(100) NOT NULL,
  `med_mail` VARCHAR(100) NOT NULL,
  `med_celular` VARCHAR(50) NOT NULL,
  `med_especialidad` INT NOT NULL,
  `consultorio_con_numero` INT NOT NULL,
  PRIMARY KEY (`med_identificacion`),
  CONSTRAINT `medico_fk_especialidad`
    FOREIGN KEY (`med_especialidad`)
    REFERENCES `especialidad` (`esp_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_medico_consultorio1`
    FOREIGN KEY (`consultorio_con_numero`)
    REFERENCES `consultorio` (`con_numero`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `medico_fk_especialidad_idx` ON `medico` (`med_especialidad` ASC) VISIBLE;

CREATE INDEX `fk_medico_consultorio1_idx` ON `medico` (`consultorio_con_numero` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `cita`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cita` (
  `cit_id` INT NOT NULL AUTO_INCREMENT,
  `cit_fecha` DATE NOT NULL,
  `cit_hora` VARCHAR(45) NOT NULL,
  `paciente_pac_identificacion` VARCHAR(20) NOT NULL,
  `medico_med_identificacion` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`cit_id`),
  CONSTRAINT `fk_cita_paciente1`
    FOREIGN KEY (`paciente_pac_identificacion`)
    REFERENCES `paciente` (`pac_identificacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cita_medico1`
    FOREIGN KEY (`medico_med_identificacion`)
    REFERENCES `medico` (`med_identificacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_cita_paciente1_idx` ON `cita` (`paciente_pac_identificacion` ASC) VISIBLE;

CREATE INDEX `fk_cita_medico1_idx` ON `cita` (`medico_med_identificacion` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `historia_clinica`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `historia_clinica` (
  `paciente_pac_identificacion` VARCHAR(20) NOT NULL,
  `cita_cit_id` INT NOT NULL,
  `hiscli_grupo_sanguineol` INT NOT NULL,
  `hiscli_antecedentes` TEXT NULL,
  `hiscli_diagnostico` TEXT NULL,
  `hiscli_signos_vitales` TEXT NULL,
  `hiscli_motivo_consulta` TEXT NULL,
  PRIMARY KEY (`paciente_pac_identificacion`),
  CONSTRAINT `fk_historia_clinica_cita`
    FOREIGN KEY (`cita_cit_id`)
    REFERENCES `cita` (`cit_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_historia_clinica_paciente1`
    FOREIGN KEY (`paciente_pac_identificacion`)
    REFERENCES `paciente` (`pac_identificacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `historia_clinica_fk_grupo_sanguineo`
    FOREIGN KEY (`hiscli_grupo_sanguineol`)
    REFERENCES `grupo_sanguineo` (`grupsa_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_historia_clinica_cita_idx` ON `historia_clinica` (`cita_cit_id` ASC) VISIBLE;

CREATE INDEX `fk_historia_clinica_paciente1_idx` ON `historia_clinica` (`paciente_pac_identificacion` ASC) VISIBLE;

CREATE INDEX `historia_clinica_fk_grupo_sanguineo_idx` ON `historia_clinica` (`hiscli_grupo_sanguineol` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
